{%- set finalPath = "result/dao" -%}
{%- set fileName = tableInfo.name|pascalCase + ".text" -%}
{{- this | saveFile(finalPath,fileName) -}}

{#{% set global=namespace(pk="") %}#}
{#{% for v in {{ tableInfo.pkColumn }} %}#}
{#    {% set global.pk=v.name %}#}
{#{% endfor %}#}

{%- set tablename2PC =  tableInfo.name | pascalCase%}
{%- set tableNameLower =  tableInfo.name | camelCase%}
{% set className = tableNameLower+"Dao" -%}


import java.entity.{{ tableInfo.name2PC }};
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import javax.validation.constraints.*;
import java.util.List;


public interface {{ className }} {

    {{ tableInfo.name2PC }} getById(@NotNull {{ tableInfo.pkColumn.shortType }} {{ tableInfo.pkColumn.name | camelCase}});

    List<{{ tableInfo.name2PC }}> listByEntity({{ tableInfo.name2PC }} {{ tableNameLower }});

    {{ tableInfo.name2PC }} getByEntity({{ tableInfo.name2PC }} {{ tableNameLower }});

    List<{{ tableInfo.name2PC }}> listByIds(@NotEmpty List<{{ tableInfo.pkColumn.shortType }} list);

    int insert(@NotNull {{ tableInfo.name2PC }} {{ tableNameLower }});

    int insertBatch(@NotEmpty List<{{ tableInfo.name2PC }}> list);

    int update(@NotNull {{ tableInfo.name2PC }} {{ tableNameLower }});

    int updateByField(@NotNull @Param("where") {{ tableInfo.name2PC }} where, @NotNull @Param("set") {{ tableInfo.name2PC }} set);

    int updateBatch(@NotEmpty List<{{ tableInfo.name2PC }}> list);

    int deleteById(@NotNull  {{ tableInfo.pkColumn.shortType }} {{ tableNameLower }});

    int deleteByEntity(@NotNull {{ tableInfo.name2PC }} {{ tableNameLower }});

    int deleteByIds(@NotEmpty List<{{ tableInfo.pkColumn.shortType }}> list);

    int countAll();

    int countByEntity({{ tableInfo.name2PC }} {{ tableNameLower }});

}